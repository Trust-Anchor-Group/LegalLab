<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:LegalLab.Converters"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        x:Class="LegalLab.MainWindow" Title="TAG Legal Lab" Height="450" Width="800" Background="#FFE5E5E5">
    <DockPanel LastChildFill="True">
        <StatusBar Name="StatusBar" DockPanel.Dock="Bottom">
            <StatusBarItem Name="XmppState" Content="{Binding State}"/>
            <StatusBarItem Name="Status"></StatusBarItem>
        </StatusBar>
        <TabControl Name="TabControl" DockPanel.Dock="Top">
            <TabItem Name="NetworkTab" Header="Network ID">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">XMPP Server:</Label>
                            <TextBox Text="{Binding XmppServer}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0">Account:</Label>
                            <TextBox Text="{Binding Account}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0">Password:</Label>
                            <PasswordBox Name="XmppPassword" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Create Account, if none exists." IsChecked="{Binding CreateAccount}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">Repeat Password:</Label>
                            <PasswordBox Name="XmppPassword2" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">API Key (for creating accounts):</Label>
                            <TextBox Text="{Binding ApiKey}" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">API Key Secret (for creating accounts):</Label>
                            <PasswordBox Name="ApiKeySecret" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Trust server certificate." IsChecked="{Binding TrustServerCertificate}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Allow insecure authentication." IsChecked="{Binding AllowInsecureAlgorithms}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Store password instead of digest." IsChecked="{Binding StorePasswordInsteadOfDigest}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Button Margin="10,10,10,0" Command="{Binding Connect}" Visibility="{Binding ConnectOnStartup, Converter={conv:NotBooleanToVisibility}}">Connect</Button>
                            <Button Margin="10,10,10,0" Command="{Binding Disconnect}" Visibility="{Binding ConnectOnStartup, Converter={conv:BooleanToVisibility}}">Disconnect</Button>
                            <Button Margin="10,10,10,0" Command="{Binding RandomizePassword}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}">Randomize Password</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <!-- Sniffer from IoTGateway project, with permission -->
                    <ListView Name="SnifferListView" HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible"
                              DockPanel.Dock="Right">
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Padding" Value="5,0,0,0" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Time" Width="70" DisplayMemberBinding="{Binding Time}"/>
                                <GridViewColumn Header="Content" Width="830">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Message}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="0.75"/>
                                        <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                        <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                        <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem Name="LegalIdTab" Header="Legal ID">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">First Name:</Label>
                            <TextBox Text="{Binding FirstName}"/>
                            <Label Padding="0,10,0,0">Middle Name:</Label>
                            <TextBox Text="{Binding MiddleName}"/>
                            <Label Padding="0,10,0,0">Last Name:</Label>
                            <TextBox Text="{Binding LastName}"/>
                            <Label Padding="0,10,0,0">Personal Number:</Label>
                            <TextBox Text="{Binding PersonalNumber}"/>
                            <Label Padding="0,10,0,0">Address:</Label>
                            <TextBox Text="{Binding Address}"/>
                            <Label Padding="0,10,0,0">Address, row 2:</Label>
                            <TextBox Text="{Binding Address2}"/>
                            <Label Padding="0,10,0,0">Postal Code (or ZIP):</Label>
                            <TextBox Text="{Binding Zip}"/>
                            <Label Padding="0,10,0,0">Area:</Label>
                            <TextBox Text="{Binding Area}"/>
                            <Label Padding="0,10,0,0">City:</Label>
                            <TextBox Text="{Binding City}"/>
                            <Label Padding="0,10,0,0">Region:</Label>
                            <TextBox Text="{Binding Region}"/>
                            <Label Padding="0,10,0,0">Country:</Label>
                            <ComboBox ItemsSource="{Binding CountryCodes}" DisplayMemberPath="Country" SelectedValuePath="Code" SelectedValue="{Binding Country}"/>
                            <Button Margin="10,10,10,0" Command="{Binding Apply}">Apply</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <ListView HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible" 
                              ItemsSource="{Binding Identities}" DockPanel.Dock="Right">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" Width="400">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="LegalLab.Models.Legal.IdentityWrapper">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding Id}"/>
                                                <Image Source="{Binding QrCodeUrl}" Width="200" Height="200" Visibility="{Binding IsSelected, Converter={conv:BooleanToVisibility}}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Created" Width="150" DisplayMemberBinding="{Binding Created, Converter={conv:DateTimeToString}}"/>
                                <GridViewColumn Header="State" Width="100" DisplayMemberBinding="{Binding State, Converter={conv:ToString}}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem Name="WalletTab" Header="Wallet">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">Balance:</Label>
                            <TextBox Text="{Binding Amount}" IsReadOnly="True"/>
                            <Label Padding="0,10,0,0">Currency:</Label>
                            <TextBox Text="{Binding Currency}" IsReadOnly="True"/>
                            <Label Padding="0,10,0,0">Timestamp:</Label>
                            <TextBox Text="{Binding Timestamp, Converter={conv:DateTimeToString}}" IsReadOnly="True"/>
                            <Label Padding="0,30,0,0">e-Daler URI:</Label>
                            <TextBox Text="{Binding Uri, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Height="100" VerticalScrollBarVisibility="Auto"/>
                            <Button Margin="10,10,10,0" Command="{Binding Send}">Send</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <ListView HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Events}"
                              DockPanel.Dock="Right">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Transaction" Width="250" DisplayMemberBinding="{Binding TransactionId}"/>
                                <GridViewColumn Header="Timestamp" Width="150" DisplayMemberBinding="{Binding Timestamp, Converter={conv:DateTimeToString}}"/>
                                <GridViewColumn Header="Remote" Width="200" DisplayMemberBinding="{Binding Remote}"/>
                                <GridViewColumn Header="Change" Width="100" DisplayMemberBinding="{Binding Change, Converter={conv:ToString}}"/>
                                <GridViewColumn Header="Balance" Width="100" DisplayMemberBinding="{Binding Balance, Converter={conv:ToString}}"/>
                                <GridViewColumn Header="Message" Width="100" DisplayMemberBinding="{Binding Message}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem Name="DesignTab" Header="Design">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Name="DesignCommands" Orientation="Vertical" Width="250" Margin="10">
                        </StackPanel>
                    </ScrollViewer>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" DockPanel.Dock="Right">
                        <StackPanel Name="DesignedContract" Orientation="Vertical" Margin="10">
                            <Label FontSize="20">General Information</Label>
                            <Label>General information about the contract being designed:</Label>
                            <WrapPanel Orientation="Horizontal">
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>ID:</Label>
                                    <TextBox Text="{Binding ContractId}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Visibility:</Label>
                                    <ComboBox SelectedValue="{Binding Visibility}" ItemsSource="{Binding Visibilities}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Duration:</Label>
                                    <TextBox Text="{Binding Duration, Converter={conv:DurationToString}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Archiving (Req.):</Label>
                                    <TextBox Text="{Binding ArchiveRequired, Converter={conv:DurationToString}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Archiving (Opt.):</Label>
                                    <TextBox Text="{Binding ArchiveOptional, Converter={conv:DurationToString}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Parts:</Label>
                                    <ComboBox SelectedValue="{Binding PartsMode}" ItemsSource="{Binding PartsModes}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Sign After:</Label>
                                    <TextBox Text="{Binding SignAfter, Converter={conv:DateTimeToString}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Width="100" Margin="0,0,10,10">
                                    <Label>Sign Before:</Label>
                                    <TextBox Text="{Binding SignBefore, Converter={conv:DateTimeToString}}"/>
                                </StackPanel>
                            </WrapPanel>
                            <DataGrid HeadersVisibility="None" ItemsSource="{Binding GeneralInformation}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}"/>
                                    <DataGridTextColumn Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Roles</Label>
                            <Label>Following are roles defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Roles}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Role"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding MinCount}" Header="Min"/>
                                    <DataGridTextColumn Binding="{Binding MaxCount}" Header="Max"/>
                                    <DataGridTextColumn Binding="{Binding CanRevoke, Converter={conv:BooleanToYesNo}}" Header="Can Revoke"/>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding SignAsRole}" IsEnabled="{Binding CanBeSigned}">Sign</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding ProposeForRole}" IsEnabled="{Binding CanBeSigned}">Propose</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Width="100" HorizontalAlignment="Left" Margin="0,5,0,0" Command="{Binding AddRole}">Add</Button>

                            <Label FontSize="20" Margin="0,10,0,0">Parts</Label>
                            <Label>Following are parts defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parts}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Legal ID"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Role"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Parameters</Label>
                            <Label>Following are parameters defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parameters}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Parameter"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Value"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Machine-Readable Content</Label>
                            <Label>Following is the embedded Machine-readable content of the contract:</Label>
                            <StackPanel Background="White">
                                <TextBlock Text="{Binding MachineReadable}" Margin="10" FontFamily="Courier New"/>
                            </StackPanel>

                            <Label FontSize="20" Margin="0,10,0,0">Human-Readable Content</Label>
                            <StackPanel Background="White">
                                <StackPanel Name="DesignedContractHumanReadable" Margin="10"/>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>
            <TabItem Name="UploadTab" Header="Upload Template">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Name="UploadCommands" Orientation="Vertical" Width="250" Margin="10" Visibility="Hidden">
                            <Button Margin="10,0,10,0" Command="{Binding SelectFile}">Select File</Button>
                            <StackPanel Name="UploadParameters"/>
                            <StackPanel Name="TemplateCommands">
                                <Label Margin="10,10,10,0">Template Name:</Label>
                                <TextBox Name="TemplateName" Margin="10,0,10,0" Text="{Binding TemplateName}"/>
                                <Button Margin="10,10,10,0" Command="{Binding ProposeTemplate}">Propose Template</Button>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" DockPanel.Dock="Right">
                        <StackPanel Name="ProposedContract" Orientation="Vertical" Margin="10" Visibility="Hidden">
                            <Label FontSize="20">Template ID</Label>
                            <Label>ID of the template:</Label>
                            <TextBox Text="{Binding ContractId}" IsReadOnly="True"/>
                            <Label>Scan this code to access the template from another device:</Label>
                            <Image Source="{Binding QrCodeUri}" Width="200" Height="200" Margin="20" HorizontalAlignment="Left"
                                   Visibility="{Binding HasId, Converter={conv:BooleanToVisibility}}"/>

                            <Label FontSize="20">General Information</Label>
                            <Label>Following is some general information about the loaded contract:</Label>
                            <DataGrid HeadersVisibility="None" ItemsSource="{Binding GeneralInformation}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}"/>
                                    <DataGridTextColumn Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Roles</Label>
                            <Label>Following are roles defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Roles}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Role"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding MinCount}" Header="Min"/>
                                    <DataGridTextColumn Binding="{Binding MaxCount}" Header="Max"/>
                                    <DataGridTextColumn Binding="{Binding CanRevoke, Converter={conv:BooleanToYesNo}}" Header="Can Revoke"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Parts</Label>
                            <Label>Following are parts defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parts}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Legal ID"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Role"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Parameters</Label>
                            <Label>Following are parameters defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parameters}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Parameter"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Value"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Machine-Readable Content</Label>
                            <Label>Following is the embedded Machine-readable content of the contract:</Label>
                            <StackPanel Background="White">
                                <TextBlock Text="{Binding MachineReadable}" Margin="10" FontFamily="Courier New"/>
                            </StackPanel>

                            <Label FontSize="20" Margin="0,10,0,0">Human-Readable Content</Label>
                            <StackPanel Background="White">
                                <StackPanel Name="ProposedContractHumanReadable" Margin="10"/>
                            </StackPanel>

                            <Label FontSize="20" Margin="0,10,0,0">Server Signature</Label>
                            <Label>Following is any server signature available in the contract:</Label>
                            <DataGrid ItemsSource="{Binding ServerSignatures}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Timestamp, Converter={conv:DateTimeToString}}" Header="Timestamp"/>
                                    <DataGridTextColumn Binding="{Binding Signature, Converter={conv:ToBase64}}" Header="Signature"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>
            <TabItem Name="ContractsTab" Header="Create Contract">
                <DockPanel LastChildFill="True" Background="#FFE5E5E5">
                    <ScrollViewer DockPanel.Dock="Left">
                        <StackPanel Name="ContractCommands" Orientation="Vertical" Width="250" Margin="10">
                            <Label>Template:</Label>
                            <ComboBox ItemsSource="{Binding Templates}" DisplayMemberPath="TemplateName" SelectedValuePath="TemplateName" SelectedValue="{Binding ContractTemplateName}"/>
                            <StackPanel Name="CreateParameters"/>
                            <StackPanel Name="CreateCommands" Visibility="Hidden">
                                <Button Margin="0,10,0,0" Command="{Binding CreateContract}" IsEnabled="{Binding ParametersOk}">Create Contract</Button>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                    <ScrollViewer VerticalScrollBarVisibility="Auto" DockPanel.Dock="Right">
                        <StackPanel Name="ContractToCreate" Orientation="Vertical" Margin="10" Visibility="Hidden">
                            <Label FontSize="20">Contract ID</Label>
                            <Label>ID of the contract:</Label>
                            <TextBox Text="{Binding ContractId}" IsReadOnly="True"/>
                            <Label>Scan this code to access the contract from another device:</Label>
                            <Image Source="{Binding QrCodeUri}" Width="200" Height="200" Margin="20" HorizontalAlignment="Left"
                                   Visibility="{Binding HasId, Converter={conv:BooleanToVisibility}}"/>

                            <Label FontSize="20">General Information</Label>
                            <Label>Following is some general information about the loaded contract:</Label>
                            <DataGrid HeadersVisibility="None" ItemsSource="{Binding GeneralInformation}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}"/>
                                    <DataGridTextColumn Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Roles</Label>
                            <Label>Following are roles defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Roles}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Role"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding MinCount}" Header="Min"/>
                                    <DataGridTextColumn Binding="{Binding MaxCount}" Header="Max"/>
                                    <DataGridTextColumn Binding="{Binding CanRevoke, Converter={conv:BooleanToYesNo}}" Header="Can Revoke"/>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding SignAsRole}" IsEnabled="{Binding CanBeSigned}">Sign</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="{Binding ProposeForRole}" IsEnabled="{Binding CanBeSigned}">Propose</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Parts</Label>
                            <Label>Following are parts defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parts}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Legal ID"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Role"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Parameters</Label>
                            <Label>Following are parameters defined in the contract:</Label>
                            <DataGrid ItemsSource="{Binding Parameters}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" Header="Parameter"/>
                                    <DataGridTextColumn Binding="{Binding Value}" Header="Value"/>
                                    <DataGridTemplateColumn Header="Description">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ContentControl Content="{Binding Description}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Machine-Readable Content</Label>
                            <Label>Following is the embedded Machine-readable content of the contract:</Label>
                            <StackPanel Background="White">
                                <TextBlock Text="{Binding MachineReadable}" Margin="10" FontFamily="Courier New"/>
                            </StackPanel>

                            <Label FontSize="20" Margin="0,10,0,0">Human-Readable Content</Label>
                            <StackPanel Background="White">
                                <StackPanel Name="ContractToCreateHumanReadable" Margin="10"/>
                            </StackPanel>

                            <Label FontSize="20" Margin="0,10,0,0">Client Signatures</Label>
                            <Label>Following are client signatures available in the contract:</Label>
                            <DataGrid ItemsSource="{Binding ClientSignatures}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding BareJid}" Header="Network JID"/>
                                    <DataGridTextColumn Binding="{Binding LegalId}" Header="Legal ID"/>
                                    <DataGridTextColumn Binding="{Binding Role}" Header="Role"/>
                                    <DataGridTextColumn Binding="{Binding Timestamp, Converter={conv:DateTimeToString}}" Header="Timestamp"/>
                                    <DataGridTextColumn Binding="{Binding Transferable, Converter={conv:BooleanToYesNo}}" Header="Transferable"/>
                                    <DataGridTextColumn Binding="{Binding Signature, Converter={conv:ToBase64}}" Header="Signature"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label FontSize="20" Margin="0,10,0,0">Server Signature</Label>
                            <Label>Following is any server signature available in the contract:</Label>
                            <DataGrid ItemsSource="{Binding ServerSignatures}" Width="Auto" HorizontalAlignment="Left" 
                                      AutoGenerateColumns="False" GridLinesVisibility="None" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Timestamp, Converter={conv:DateTimeToString}}" Header="Timestamp"/>
                                    <DataGridTextColumn Binding="{Binding Signature, Converter={conv:ToBase64}}" Header="Signature"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>
            <TabItem Name="EventsTab" Header="Events">
                <ListView Name="EventListView" HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <ListView.Resources>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Time" Width="70" DisplayMemberBinding="{Binding Time}"/>
                            <GridViewColumn Header="Type" Width="70" DisplayMemberBinding="{Binding Type}"/>
                            <GridViewColumn Header="Level" Width="70" DisplayMemberBinding="{Binding Level}"/>
                            <GridViewColumn Header="Event ID" Width="125" DisplayMemberBinding="{Binding EventId}"/>
                            <GridViewColumn Header="Object" Width="250" DisplayMemberBinding="{Binding Object}"/>
                            <GridViewColumn Header="Actor" Width="250" DisplayMemberBinding="{Binding Actor}"/>
                            <GridViewColumn Header="Message" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Message}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                            <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Opacity" Value="0.75"/>
                                    <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                    <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.5"/>
                                    <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                    <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </TabItem>
            <TabItem Name="ScriptTab" Header="Script">
                <DockPanel LastChildFill="True">
                    <StackPanel DockPanel.Dock="Bottom" Margin="5,5,5,5">
                        <TextBlock>Enter script to execute below. Execute by pressing ENTER. Script reference: 
                            <Hyperlink NavigateUri="{Binding ReferenceUri}" Click="OpenScriptReference">
                                <Run Text="{Binding ReferenceUri}" d:Text="https://lab.tagroot.io/Script.md"/>
                            </Hyperlink>
                        </TextBlock>
                        <TextBox Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" ToolTip="Enter script to execute here." AcceptsTab="True"
                                 Margin="0,0,0,0" Height="60" AcceptsReturn="True" PreviewKeyDown="InputPreviewKeyDown">
                        </TextBox>
                    </StackPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" DockPanel.Dock="Top">
                        <StackPanel Name="HistoryPanel">
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
