<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:LegalLab.Converters"
        mc:Ignorable="d"
        x:Class="LegalLab.MainWindow" Title="TAG Legal Lab" Height="450" Width="800" Background="#FFE5E5E5">
    <Grid>
        <TabControl Name="TabControl">
            <TabItem Name="NetworkTab" Header="Network ID">
                <StackPanel Orientation="Horizontal" Background="#FFE5E5E5" Height="Auto">
                    <ScrollViewer>
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">XMPP Server:</Label>
                            <TextBox Text="{Binding XmppServer}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0">Account:</Label>
                            <TextBox Text="{Binding Account}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0">Password:</Label>
                            <PasswordBox Name="XmppPassword" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Create Account, if none exists." IsChecked="{Binding CreateAccount}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">Repeat Password:</Label>
                            <PasswordBox Name="XmppPassword2" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">API Key (for creating accounts):</Label>
                            <TextBox Text="{Binding ApiKey}" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Label Padding="0,10,0,0" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}">API Key Secret (for creating accounts):</Label>
                            <PasswordBox Name="ApiKeySecret" Visibility="{Binding CreateAccount, Converter={conv:BooleanToVisibility}}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Trust server certificate." IsChecked="{Binding TrustServerCertificate}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Allow insecure authentication." IsChecked="{Binding AllowInsecureAlgorithms}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <CheckBox Margin="0,10,0,0" Content="Store password instead of digest." IsChecked="{Binding StorePasswordInsteadOfDigest}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}"/>
                            <Button Margin="10,10,10,0" Command="{Binding Connect}" Visibility="{Binding ConnectOnStartup, Converter={conv:NotBooleanToVisibility}}">Connect</Button>
                            <Button Margin="10,10,10,0" Command="{Binding Disconnect}" Visibility="{Binding ConnectOnStartup, Converter={conv:BooleanToVisibility}}">Disconnect</Button>
                            <Button Margin="10,10,10,0" Command="{Binding RandomizePassword}" IsEnabled="{Binding ConnectOnStartup, Converter={conv:Not}}">Randomize Password</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <!-- Sniffer from IoTGateway project, with permission -->
                    <ListView Name="SnifferListView" HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ListView.Resources>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Padding" Value="5,0,0,0" />
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Time" Width="70" DisplayMemberBinding="{Binding Time}"/>
                                <GridViewColumn Header="Content" Width="830">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Message}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Opacity" Value="0.75"/>
                                        <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                        <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="Foreground" Value="{Binding ForegroundColor, Converter={conv:ToString}}" />
                                        <Setter Property="Background" Value="{Binding BackgroundColor, Converter={conv:ToString}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </StackPanel>
            </TabItem>
            <TabItem Name="LegalIdTab" Header="Legal ID">
                <StackPanel Orientation="Horizontal" Background="#FFE5E5E5" Height="Auto">
                    <ScrollViewer>
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">First Name:</Label>
                            <TextBox Text="{Binding FirstName}"/>
                            <Label Padding="0,10,0,0">Middle Name:</Label>
                            <TextBox Text="{Binding MiddleName}"/>
                            <Label Padding="0,10,0,0">Last Name:</Label>
                            <TextBox Text="{Binding LastName}"/>
                            <Label Padding="0,10,0,0">Personal Number:</Label>
                            <TextBox Text="{Binding PersonalNumber}"/>
                            <Label Padding="0,10,0,0">Address:</Label>
                            <TextBox Text="{Binding Address}"/>
                            <Label Padding="0,10,0,0">Address, row 2:</Label>
                            <TextBox Text="{Binding Address2}"/>
                            <Label Padding="0,10,0,0">Postal Code (or ZIP):</Label>
                            <TextBox Text="{Binding Zip}"/>
                            <Label Padding="0,10,0,0">Area:</Label>
                            <TextBox Text="{Binding Area}"/>
                            <Label Padding="0,10,0,0">City:</Label>
                            <TextBox Text="{Binding City}"/>
                            <Label Padding="0,10,0,0">Region:</Label>
                            <TextBox Text="{Binding Region}"/>
                            <Label Padding="0,10,0,0">Country:</Label>
                            <ComboBox ItemsSource="{Binding CountryCodes}" DisplayMemberPath="Country" SelectedValuePath="Code" SelectedValue="{Binding Country}"/>
                            <Button Margin="10,10,10,0" Command="{Binding Apply}">Apply</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <ListView HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Identities}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" Width="400">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="LegalLab.Models.Legal.IdentityWrapper">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding Id}"/>
                                                <Image Source="{Binding QrCodeUrl}" Width="200" Height="200" Visibility="{Binding IsSelected, Converter={conv:BooleanToVisibility}}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Created" Width="150" DisplayMemberBinding="{Binding Created, Converter={conv:DateTimeToString}}"/>
                                <GridViewColumn Header="State" Width="100" DisplayMemberBinding="{Binding State, Converter={conv:ToString}}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </StackPanel>
            </TabItem>
            <TabItem Name="WalletTab" Header="Wallet">
                <StackPanel Orientation="Horizontal" Background="#FFE5E5E5" Height="Auto">
                    <ScrollViewer>
                        <StackPanel Orientation="Vertical" Width="250" Margin="10">
                            <Label Padding="0">Balance:</Label>
                            <TextBox Text="{Binding Amount}" IsReadOnly="True"/>
                            <Label Padding="0,10,0,0">Currency:</Label>
                            <TextBox Text="{Binding Currency}" IsReadOnly="True"/>
                            <Label Padding="0,10,0,0">Timestamp:</Label>
                            <TextBox Text="{Binding Timestamp, Converter={conv:DateTimeToString}}" IsReadOnly="True"/>
                            <Label Padding="0,30,0,0">e-Daler URI:</Label>
                            <TextBox Text="{Binding Uri, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Height="100" VerticalScrollBarVisibility="Auto"/>
                            <Button Margin="10,10,10,0" Command="{Binding Send}">Send</Button>
                        </StackPanel>
                    </ScrollViewer>
                    <ListView HorizontalAlignment="Left" Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Events}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Transaction" Width="250" DisplayMemberBinding="{Binding TransactionId}"/>
                                <GridViewColumn Header="Timestamp" Width="150" DisplayMemberBinding="{Binding Timestamp, Converter={conv:DateTimeToString}}"/>
                                <GridViewColumn Header="Remote" Width="200" DisplayMemberBinding="{Binding Remote}"/>
                                <GridViewColumn Header="Change" Width="100" DisplayMemberBinding="{Binding Change, Converter={conv:ToString}}"/>
                                <GridViewColumn Header="Balance" Width="100" DisplayMemberBinding="{Binding Balance, Converter={conv:ToString}}"/>
                                <GridViewColumn Header="Message" Width="100" DisplayMemberBinding="{Binding Message}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </StackPanel>
            </TabItem>
            <TabItem Name="ContractsTab" Header="Contracts">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
            <TabItem Name="EventsTab" Header="Events">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
            <TabItem Name="ScriptTab" Header="Script">
                <Grid Background="#FFE5E5E5"/>
            </TabItem>
        </TabControl>
        <StatusBar Name="StatusBar" VerticalAlignment="Bottom">
            <StatusBarItem Name="XmppState" Content="{Binding State}"/>
            <StatusBarItem Name="Status"></StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
